def get_ai_move(self):
        '''Get the AI's next move '''
        corners =  [0, 2, 6, 8]

        symbols = ["o", "x"]

        for j in symbols:
            space = 0
            for i in self.board:
                if(space % 3 == 0) & (self.board[space] == j):
                    if(self.board[space+2] == j) & (self.board[space+1] == ' '):
                        return space+1
                elif((space == 1) | (space ==  4) | (space == 7)) & (self.board[space] == j):
                    if(self.board[space+1] == j) & (self.board[space-1] == ' '):
                        return space-1
                    elif(self.board[space-1] == j) & (self.board[space+1] == ' '):
                        return space+1
                if(space < 3) & (self.board[space] == j):
                    if(self.board[space+6] == j) & (self.board[space+3] == ' '):
                        return space+3
                elif((space == 3) | (space ==  4) | (space == 5)) & (self.board[space] == j):
                    if(self.board[space+3] == j) & (self.board[space-3] == ' '):
                        return space-3
                    elif(self.board[space-3] == j) & (self.board[space+3] == ' '):
                        return space+3
                if(space in corners) & (self.board[space] == j) & (self.board[4] == j):
                    if(space == 0) & (self.board[8] == " "):
                        return 8
                    if(space == 2) & (self.board[6] == " "):
                        return 6
                    if(space == 6) & (self.board[2] == " "):
                        return 2
                    if(space == 8) & (self.board[0] == " "):
                        return 0
                space += 1

        if(self.move == 0):
            if(self.board[8] == " "):
                return 8
        if(self.move == 2):
            if(self.board[6] == " "):
                return 6
        if(self.move == 6):
            if(self.board[2] == " "):
                return 2
        if(self.move == 8):
            if(self.board[0] == " "):
                return 0

        if (self.board[4] == ' '):
            return 4

        if(self.move == 1) | (self.move == 7):
            if(randrange(2) == 0):
                if(self.board[self.move - 1] == " "):
                    return (self.move - 1)
            else:
                if(self.board[self.move + 1] == " "):
                    return (self.move + 1)
        elif(self.move == 3) | (self.move == 5):
            if(randrange(2) == 0):
                if(self.board[self.move - 3] == " "):
                    return (self.move - 3)
            else:
                if(self.board[self.move + 3] == " "):
                    return (self.move + 3)

        if(self.board[0] != " ") & (self.board[2] != " ") & (self.board[6] != " ") & (self.board[8] != " "):
            space = randrange(9)
            while(self.board[space] != " "):
                space = randrange(9)
            return space
        else:
            corner = 0
            while(self.board[corner] != " "):
                x = randrange(len(corners))
                corner = corners[x]
            return corner