avoidMoves = []
        allMoves = [0,1,2,3,4,5,6,7,8]
        goodMoves = []
        with open('data.txt') as f:
            datamoves = f.readlines()
        for i in datamoves:
            if ('o' in i): #if winning outcome exists, play appropriate move
                if (self.moves in i[0:len(self.moves)]):
                    goodMoves.insert(-1,i[len(self.moves)])
            elif ('tie' in i): #if tie exists, play appropriate move
                if (self.moves in i[0:len(self.moves)]):
                    goodMoves.insert(-1,i[len(self.moves)])
            elif ('x' in i): #if a move leads to a loss, don't play it
                if (self.moves in i[0:len(self.moves)]):
                    avoidMoves.insert(-1,i[len(self.moves)])
                for j in avoidMoves:
                    if (j in allMoves):
                        allMoves.remove(j)
                goodMoves.insert(-1,allMoves[randrange(len(allMoves))])
        return goodMoves[randrange(len(goodMoves))]
		
		
		
		
		
		
		
if ('o' in i): #if winning outcome exists, play appropriate move
                if (self.moves in i[0:len(self.moves)]):
                    if (i[len(self.moves)] not in goodMoves):
                        goodMoves.insert(-1,i[len(self.moves)])
            else:
                if ('tie' in i): #if tie exists, play appropriate move
                    if (self.moves in i[0:len(self.moves)]):
                        if (i[len(self.moves)] not in goodMoves):
                            goodMoves.insert(-1,i[len(self.moves)])
							
							
							
							
							
							
						
                        if (self.moves in i):
                            if (i[len(self.moves)] not in potMoves):
                                potMoves.insert(-1,int(i[len(self.moves)]))